<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'doctrine_mongodb.odm.default_configuration' shared service.

$this->services['doctrine_mongodb.odm.default_configuration'] = $instance = new \Doctrine\ODM\MongoDB\Configuration();

$a = new \Doctrine\Common\Cache\ArrayCache();
$a->setNamespace('sf_mongodb_default_lajjmjy');
$b = new \Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain();

$c = new \Doctrine\ODM\MongoDB\Mapping\Driver\AnnotationDriver(${($_ = isset($this->services['annotation_reader']) ? $this->services['annotation_reader'] : $this->getAnnotationReaderService()) && false ?: '_'}, [0 => ($this->targetDirs[3].'/src/AppBundle/Mvc/Domain'), 1 => ($this->targetDirs[3].'/src/AppBundle/Mvc/Infrastructure/Doctrine/Document')]);

$b->addDriver($c, 'Mvc\\Domain');
$b->addDriver($c, 'Mvc\\Infrastructure\\Doctrine\\Document');
$b->addDriver(new \Doctrine\ODM\MongoDB\Mapping\Driver\XmlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator([($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/Resources/config/doctrine-mapping') => 'FOS\\UserBundle\\Model'], '.mongodb.xml')), 'FOS\\UserBundle\\Model');

$instance->setDocumentNamespaces(['Mvc' => 'Mvc\\Domain', 'DomainEvent' => 'Mvc\\Infrastructure\\Doctrine\\Document']);
$instance->setMetadataCacheImpl($a);
$instance->setMetadataDriverImpl($b);
$instance->setProxyDir(($this->targetDirs[0].'/doctrine/odm/mongodb/Proxies'));
$instance->setProxyNamespace('MongoDBODMProxies');
$instance->setAutoGenerateProxyClasses(0);
$instance->setHydratorDir(($this->targetDirs[0].'/doctrine/odm/mongodb/Hydrators'));
$instance->setHydratorNamespace('Hydrators');
$instance->setAutoGenerateHydratorClasses(1);
$instance->setDefaultDB($this->getEnv('DB_NAME'));
$instance->setDefaultCommitOptions([]);
$instance->setRetryConnect(0);
$instance->setRetryQuery(0);
$instance->setDefaultDocumentRepositoryClassName('Doctrine\\ODM\\MongoDB\\DocumentRepository');
$instance->setPersistentCollectionDir(($this->targetDirs[0].'/doctrine/odm/mongodb/PersistentCollections'));
$instance->setPersistentCollectionNamespace('PersistentCollections');
$instance->setAutoGeneratePersistentCollectionClasses(0);
$instance->setRepositoryFactory(new \Doctrine\Bundle\MongoDBBundle\Repository\ContainerRepositoryFactory(${($_ = isset($this->services['service_locator.sr6ctxe']) ? $this->services['service_locator.sr6ctxe'] : ($this->services['service_locator.sr6ctxe'] = new \Symfony\Component\DependencyInjection\ServiceLocator([]))) && false ?: '_'}));

return $instance;
