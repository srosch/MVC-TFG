<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\Query\Query;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class MvcDomainHistoryUserDonationsHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="id") */
        if (isset($data['_id']) || (! empty($this->class->fieldMappings['id']['nullable']) && array_key_exists('_id', $data))) {
            $value = $data['_id'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['id']['type'];
                $return = $value instanceof \MongoId ? (string) $value : $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @ReferenceOne */
        if (isset($data['patient'])) {
            $reference = $data['patient'];
            $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['patient'], $reference);
            $mongoId = ClassMetadata::getReferenceId($reference, $this->class->fieldMappings['patient']['storeAs']);
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['patient']->setValue($document, $return);
            $hydratedData['patient'] = $return;
        }

        /** @Field(type="donation_type_type") */
        if (isset($data['type']) || (! empty($this->class->fieldMappings['type']['nullable']) && array_key_exists('type', $data))) {
            $value = $data['type'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['type']['type'];
                
            $type = \Doctrine\ODM\MongoDB\Types\Type::getType($typeIdentifier);
            $return = $type->convertToPHPValue($value);
            } else {
                $return = null;
            }
            $this->class->reflFields['type']->setValue($document, $return);
            $hydratedData['type'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['date'])) {
            $value = $data['date'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['date']->setValue($document, clone $return);
            $hydratedData['date'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['notes']) || (! empty($this->class->fieldMappings['notes']['nullable']) && array_key_exists('notes', $data))) {
            $value = $data['notes'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['notes']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['notes']->setValue($document, $return);
            $hydratedData['notes'] = $return;
        }
        return $hydratedData;
    }
}